{"version":3,"sources":["components/Login/signOut.js","components/Login/Logout.js","components/auth/Registration.js","components/Login/Login.js","components/Home/LiveChat/LiveChat.js","components/Home/HomeFeed/HomeFeed.js","components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["signOut","a","firebase","auth","Error","Logout","onClickLogout","console","log","message","onClick","Register","props","useState","name","setName","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","handleSubmit","event","axios","method","url","data","password_confirmation","withCredentials","then","response","status","handleSuccessfulAuth","catch","error","preventDefault","onSubmit","type","value","placeholder","onChange","target","Login","loginStatus","Registration","handleLogin","history","push","LiveChat","post","users","setUsers","useEffect","fetch","res","json","usersApiCall","handles","names","i","length","indexOf","username","your_name","usersList","map","item","index","className","bio","HomeFeed","setData","counter","setCounter","setUsername","yourName","setYourName","setMessage","makeApiCall","likes","handleClick","id","feed","trigger","position","Home","App","setLoginStatus","to","exact","path","render","Boolean","window","location","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.665f7515.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\n\r\nexport const signOut = async () => {\r\n    try{\r\n        await firebase.auth().signOut();\r\n    } catch (e) {\r\n        throw new Error('error while signing out')\r\n    }\r\n}","import React from 'react';\r\nimport {signOut} from './signOut'\r\n\r\nconst Logout = () => {\r\n    const onClickLogout = async () => {\r\n        try {\r\n            await signOut();\r\n        }catch (e){\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button onClick={onClickLogout}>Sign Out</button>\r\n    )\r\n}\r\n\r\nexport default Logout;","import React, { useState } from 'react'\r\n// import  signIn  from './signIn'\r\n// import Logout from './Logout'\r\nimport axios from 'axios'\r\nimport { Route, Link } from \"react-router-dom\";\r\n\r\n\r\nconst Register = (props) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirmation, setPasswordConfirmation] = useState('')\r\n    const [regErrors, setRegErrors] = useState('')\r\n\r\n    const handleName = (event) => {\r\n        setName(event.target.value)\r\n    }\r\n    const handleEmail = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n    const handlePW = (event) => {\r\n        setPassword(event.target.value)\r\n    }\r\n    const handlePWC = (event) => {\r\n        setPasswordConfirmation(event.target.value)\r\n    }\r\n    const handleSubmit = async (event) => {\r\n        axios({\r\n        \r\n            method: 'POST',\r\n            url: \"http://localhost:3000/registrations\",\r\n            data: {\r\n                name: name,\r\n                email: email,\r\n                password: password,\r\n                password_confirmation: passwordConfirmation\r\n            }\r\n        }, \r\n        {withCredentials: true}\r\n        ).then(response => {\r\n            if (response.data.status === 'created'){\r\n            this.props.handleSuccessfulAuth(response.data)\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"reg error\", error)\r\n        })\r\n\r\n        event.preventDefault()\r\n    }\r\n    return (\r\n        <>\r\n            <h1>Please Register with your email</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n\r\n                    <input type=\"name\" value={name} placeholder='First Last(name)'\r\n                        name='name' onChange={handleName} />\r\n                    <br />\r\n                    <input type=\"email\" value={email} placeholder='handle'\r\n                        name='email' onChange={handleEmail} />\r\n                    <br />\r\n\r\n                    <input type=\"password\" value={password} placeholder='password'\r\n                        name='password' onChange={handlePW} />\r\n                        <br/>\r\n\r\n                    <input type=\"password\" value={passwordConfirmation} placeholder='Confirm Password'\r\n                        name='password' onChange={handlePWC} />\r\n\r\n                </label>\r\n                <br />\r\n                    <button>Register</button>\r\n            </form>\r\n            {/* <Logout /> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register","import React, {useState} from 'react'\r\n// import  signIn  from './signIn'\r\nimport Logout from './Logout'\r\nimport Registration from '../auth/Registration'\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\n\r\nconst Login = (props) => {\r\n    const [email, setEmail] = useState ('')\r\n    const [password, setPassword] = useState ('')\r\n    const [regErrors, setRegErrors] = useState ('')\r\n\r\n    const handleSuccessfulAuth = (data) =>{\r\n        props.handleLogin(data)\r\n        props.history.push(\"/Home\")\r\n        \r\n    }\r\n    const handleEmail = (event) =>{\r\n        setEmail(event.target.value)\r\n    }\r\n    const handlePW = (event) => {\r\n        setPassword(event.target.value)\r\n    }\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n        const response = await axios({\r\n            url: `http://localhost:3000/sessions`,\r\n            method: 'POST',\r\n            data: { \r\n                email: email,\r\n                password: password\r\n             }\r\n          }, { withCredentials: true }\r\n          ).then(response => {\r\n            console.log(\"res from login\", response)\r\n        }).catch(error => {\r\n            console.log(\"login error\", error)\r\n        })\r\n\r\n        event.preventDefault()\r\n      \r\n        }\r\n    \r\n    return(\r\n        <>\r\n        <h1>Please Login with your handle</h1>\r\n        <p>{props.loginStatus}</p>\r\n        <form onSubmit={handleSubmit}>\r\n            <label>\r\n                \r\n                <input type=\"text\" value={email} placeholder='handle'\r\n                name='email' onChange={handleEmail}/>\r\n                <br/>\r\n                \r\n                <input type=\"text\" value={password} placeholder ='password' \r\n                name='password' onChange={handlePW}/>\r\n\r\n            </label>\r\n            <br/>\r\n            {/* <Link to='/home'> */}\r\n            <button>Login</button>\r\n            {/* </Link> */}\r\n\r\n        </form>\r\n        <Logout />\r\n        <Registration handleSuccessfulAuth={handleSuccessfulAuth}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useState, useEffect } from 'react'\r\nimport './LiveChat.css'\r\nimport firebase from 'firebase/app'\r\n\r\nconst LiveChat = () => {\r\n    const [post, setPost] = useState('')\r\n    const [chats, setChats] = useState([])\r\n    const [users, setUsers] = useState([])\r\n    const [userNames, setUserNames] = useState([])\r\n    const handleSubmit = () => {\r\n\r\n    }\r\n    const handleChange = () => {\r\n\r\n    }\r\n    \r\nuseEffect(() =>{\r\n    const usersUrl = 'https://sleepy-caverns-02448.herokuapp.com/posts'\r\n    const usersApiCall = async () =>{\r\n        const res = await fetch(usersUrl)\r\n        const json = await res.json()   \r\n        setUsers(json)            \r\n    }\r\n    usersApiCall()\r\n    \r\n},[])\r\n\r\n\r\n    let handles = []\r\n    let names = []\r\n    if(users[0]){\r\n        for(let i = 0; i< users.length; i++){\r\n            if(handles.indexOf(users[i].username)===-1)handles.push(users[i].username)\r\n            if(names.indexOf(users[i].your_name)===-1) names.push(users[i].your_name)\r\n\r\n        }\r\n    }\r\n    console.log('handles', handles, 'names', names)\r\n\r\n    let usersList = <h1>Loading</h1>\r\n    if(users[0]){\r\n        usersList = users.map((item,index)=>{\r\n            for(let i = 0; i <users.length; i++){\r\n                let value = users.indexOf(users[i].your_name, i+1)\r\n                if (value === -1){\r\n                    return(\r\n                        <div className = 'itemLC'>\r\n                        <p className= 'nameLC'>{item.your_name}<span className = 'handleLC'>{item.username}</span></p>\r\n                        \r\n                        <p className= 'bioLC'>{item.bio}</p>\r\n                        </div>\r\n                    )\r\n                }\r\n            } \r\n                \r\n        })\r\n    }\r\n\r\n    \r\n    \r\n\r\n\r\n    return(\r\n    <div className='liveChat'>\r\n        <form onSubmit={handleSubmit}>\r\n            <label>\r\n            \r\n            <input className= 'field' type=\"text\" value={post} placeholder=\"See all users below\"\r\n            name='email' onChange={handleChange}/>\r\n            <br/>\r\n            </label>\r\n        </form>\r\n\r\n        <div className='widget'>\r\n            {usersList}\r\n        </div>\r\n        \r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default LiveChat\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport './HomeFeed.css'\r\nimport Popup from \"reactjs-popup\";\r\n\r\nconst HomeFeed = () => {\r\n    const [post, setPost] = useState('')\r\n    const [data, setData] = useState([])\r\n    const [fave, setFave] = useState('🖤')\r\n    const [users, setUsers] = useState([])\r\n    const [counter, setCounter] = useState(0)\r\n    const [username, setUsername] = useState('')\r\n    const [yourName, setYourName] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    useEffect( () => {\r\n    const url = 'https://sleepy-caverns-02448.herokuapp.com/posts'\r\n    const makeApiCall = async () =>{\r\n        const res = await fetch(url)\r\n        const json = await res.json()\r\n        console.log(json)\r\n        setData(json)\r\n    }   \r\n    makeApiCall()     \r\n      }, [data])\r\n\r\n\r\n    \r\n\r\n    const handleSubmit = async() => {\r\n        const response = await axios({\r\n            \r\n            url: `https://sleepy-caverns-02448.herokuapp.com/posts`,\r\n            method: 'POST',\r\n            data: { \r\n                username: username,\r\n                your_name: yourName,\r\n                message: message,\r\n                likes: 0 \r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    const handleUNChange = (event) => {\r\n        setUsername(event.target.value)\r\n        \r\n    }\r\n    const handleYNChange = (event) => {\r\n        setYourName(event.target.value)\r\n\r\n    }\r\n    const handleMChange = (event) => {\r\n        setMessage(event.target.value)\r\n    }\r\n    \r\n    console.log(counter)\r\n\r\n    let heart = '🖤'\r\n    const handleClick = async (id) =>{\r\n        setCounter(counter+1)\r\n        const response = await axios({\r\n            \r\n            url: `https://sleepy-caverns-02448.herokuapp.com/posts/${id}`,\r\n            method: 'PUT',\r\n            data: { likes: counter }\r\n        })\r\n\r\n\r\n        \r\n        \r\n    }\r\n\r\n    let favorite = '🖤'\r\n    const darkHeart = '🖤'\r\n    const blueHeart = '💙'\r\n\r\n    let feed = <h1>loading</h1>\r\n    if(data[0]){\r\n        feed = data.map((item, index)=> {\r\n            \r\n                 return(\r\n                <div className='itemHF'>\r\n                    <p className='userIdHF'>{item.username}</p>\r\n                    <p className='textHF'>{item.message}</p>\r\n                    <p><button onClick={()=>handleClick(item.id)}>💙</button>{item.likes}</p>\r\n\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    \r\n    return(\r\n    <div className='homeFeed'>\r\n        <Popup trigger={<button> What's on your mind?</button>} position=\"right center\">\r\n        <form onSubmit={handleSubmit}>\r\n           <label>\r\n                <input className= 'field' type=\"username\" value={username} placeholder=\"@username\"\r\n                name='username' onChange={handleUNChange}/>\r\n                <br/>\r\n            </label>\r\n           <label>\r\n                <input className= 'field' type=\"yourName\" value={yourName} placeholder=\"Your Name\"\r\n                name='yourName' onChange={handleYNChange}/>\r\n                <br/>\r\n            </label>\r\n           <label>\r\n                <input className= 'field' type=\"message\" value={message} placeholder=\"What's on your mind?\"\r\n                name='message' onChange={handleMChange}/>\r\n                <br/>\r\n            </label>\r\n            <button>submit</button>\r\n            </form>\r\n        </Popup>\r\n        <div className = 'widget'>\r\n            {feed}\r\n\r\n        </div>\r\n        \r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default HomeFeed","import React from 'react'\r\nimport LiveChat from './LiveChat/LiveChat'\r\nimport styles from './Home.css'\r\nimport HomeFeed from './HomeFeed/HomeFeed'\r\n\r\nconst Home = (props) => {\r\n    // props.handleSuccessfulAuth = props.handleSuccessfulAuth.bind(props);\r\n\r\n    const handleSuccessfulAuth = (data) => {\r\n        //Todo update parent comonent\r\n        props.history.push(\"/Home\")\r\n    }\r\n    return(\r\n    <div className = \"home\">\r\n        <h1 className = 'header'>theSocialApp</h1>\r\n        <div className='nav'>\r\n            <h1>{props.loginStatus}</h1>\r\n        </div>\r\n        \r\n        <div className='homeFeed'>\r\n            <HomeFeed />\r\n        </div>\r\n        <div className='chat'>\r\n        <LiveChat />\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Home","import React,{useState} from 'react';\nimport './App.css';\nimport { Route, Link } from \"react-router-dom\";\nimport Login from './components/Login/Login'\nimport Home from './components/Home/Home.js'\n\nfunction App() {\n  \n  const [loginStatus, setLoginStatus] = useState(\"\")\n\n  const handleLogin = (data) =>{\n    setLoginStatus('LOGGED IN')\n    user: {}\n  }\n  return (\n    <div className=\"App\">\n      <nav>\n      <Link to=\"/home\">\n      </Link>\n      </nav>\n      <Link to=\"/\" />\n      <main>\n        <Route exact path='/home'  render = {props => (<Login \n        handleLogin={handleLogin}\n        loginStatus={loginStatus}/>)}/>\n        <Route exact path='/'  render = {props => (<Home loginStatus={loginStatus}/>)} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/analytics';\nimport 'firebase/auth';\nimport 'firebase/firestore'\n\n\n\n  // Your web app's Firebase configuration\n  var firebaseConfig = {\n    apiKey: \"AIzaSyDZIxRl36Iynr_7TJhsWVt1l0Pn_RRDZVY\",\n    authDomain: \"capstone-cffd9.firebaseapp.com\",\n    databaseURL: \"https://capstone-cffd9.firebaseio.com\",\n    projectId: \"capstone-cffd9\",\n    storageBucket: \"capstone-cffd9.appspot.com\",\n    messagingSenderId: \"306627106594\",\n    appId: \"1:306627106594:web:788431ca81925b4a7db77b\",\n    measurementId: \"G-TX38D5CR82\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}